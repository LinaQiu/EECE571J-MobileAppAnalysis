SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/Users/dora/FlowDroid/Heros/slf4j-simple-1.7.5.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/Users/dora/.m2/repository/org/slf4j/slf4j-simple/1.7.5/slf4j-simple-1.7.5.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/Users/dora/FlowDroid/soot-infoflow/lib/slf4j-simple-1.7.5.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/Users/dora/FlowDroid/soot-trunk.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.SimpleLoggerFactory]
FlowDroid (c) Secure Software Engineering Group @ EC SPRIDE

Incorrect arguments: [0] = apk-file, [1] = android-jar-directory
Optional further parameters:
	--TIMEOUT n Time out after n seconds
	--SYSTIMEOUT n Hard time out (kill process) after n seconds, Unix only
	--SINGLEFLOW Stop after finding first leak
	--IMPLICIT Enable implicit flows
	--NOSTATIC Disable static field tracking
	--NOEXCEPTIONS Disable exception tracking
	--APLENGTH n Set access path length to n
	--CGALGO x Use callgraph algorithm x
	--NOCALLBACKS Disable callback analysis
	--LAYOUTMODE x Set UI control analysis mode to x
	--ALIASFLOWINS Use a flow insensitive alias search
	--NOPATHS Do not compute result paths
	--AGGRESSIVETW Use taint wrapper in aggressive mode
	--PATHALGO Use path reconstruction algorithm x
	--LIBSUMTW Use library summary taint wrapper
	--SUMMARYPATH Path to library summaries
	--SYSFLOWS Also analyze classes in system packages
	--NOTAINTWRAPPER Disables the use of taint wrappers
	--NOTYPETIGHTENING Disables the use of taint wrappers
	--LOGSOURCESANDSINKS Print out concrete source/sink instances
	--CALLBACKANALYZER x Uses callback analysis algorithm x
	--MAXTHREADNUM x Sets the maximum number of threads to be used by the analysis to x

Supported callgraph algorithms: AUTO, CHA, RTA, VTA, SPARK, GEOM
Supported layout mode algorithms: NONE, PWD, ALL
Supported path algorithms: CONTEXTSENSITIVE, CONTEXTINSENSITIVE, SOURCESONLY
Supported callback algorithms: DEFAULT, FAST
